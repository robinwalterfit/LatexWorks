---
version: "3"

output: group

vars:
  CREATED:
    sh: date -u +'%Y-%m-%dT%H:%M:%SZ'
  NAME: latexworks
  ORG: robinwalterfit
  REVISION:
    sh: git log -n 1 --pretty=format:%H
  VERSION:
    sh: knope get-version

tasks:
  build:
    desc: Build the image for the current platform
    summary: |
      Build the image for the current platform.

      The Docker Image will be built with Buildkit. However, for performance reasons this task will
      only build the image for the current platform. This image will only be tagged with the user /
      organisation identifier and the image name. The tag will be `local`.
    deps: []
    vars:
      FEDORA_VERSION: 40
      # The scheme can be one of:
      # - basic
      # - context
      # - full
      # - gust
      # - medium
      # - minimal
      # - small
      # - tetex
      SCHEME: medium
    cmds:
      - |
        docker buildx build \
          --build-arg CREATED="{{.CREATED}}" \
          --build-arg FEDORA_VERSION="{{.FEDORA_VERSION}}" \
          --build-arg REVISION="{{.REVISION}}" \
          --build-arg TEXLIVE="texlive-scheme-{{.SCHEME}}" \
          --build-arg VERSION="{{.VERSION}}" \
          --target latexworks \
          --tag {{.ORG}}/{{.NAME}}:{{.SCHEME}}-{{.FEDORA_VERSION}}-local \
          .

  build-devcontainer:
    desc: Build the image for the current platform as Dev Container target
    summary: |
      Build the image for the current platform as Dev Container target.

      The Docker Image will be built with Buildkit. However, for performance reasons this task will
      only build the image for the current platform. This image will only be tagged with the user /
      organisation identifier and the image name. The tag will be `local`.

      The target will be the `devcontainer` stage. This image will be optimized for the usage with a
      Dev Container.
    deps: []
    vars:
      FEDORA_VERSION: 40
      HADOLINT_VERSION: 2.12.0
      LTEX_LS_VERSION: 15.2.0
      PYENV_VERSION: 2.3.24
      PYTHON_VERSION: 3.10.6
      # The scheme can be one of:
      # - basic
      # - context
      # - full
      # - gust
      # - medium
      # - minimal
      # - small
      # - tetex
      SCHEME: medium
      USER_GID:
        sh: id -g
      USER_UID:
        sh: id -u
      USERNAME:
        sh: id -un
    cmds:
      - |
        docker buildx build \
          --build-arg CREATED="{{.CREATED}}" \
          --build-arg FEDORA_VERSION="{{.FEDORA_VERSION}}" \
          --build-arg HADOLINT_VERSION="{{.HADOLINT_VERSION}}" \
          --build-arg LTEX_LS_VERSION="{{.LTEX_LS_VERSION}}" \
          --build-arg PYENV_VERSION="{{.PYENV_VERSION}}" \
          --build-arg PYTHON_VERSION="{{.PYTHON_VERSION}}" \
          --build-arg REVISION="{{.REVISION}}" \
          --build-arg TEXLIVE="texlive-scheme-{{.SCHEME}}" \
          --build-arg VERSION="{{.VERSION}}" \
          --target devcontainer \
          --tag {{.ORG}}/{{.NAME}}-devcontainer:{{.SCHEME}}-{{.FEDORA_VERSION}}-local \
          .

  changelog-entry:
    desc: Print the latest changelog entry
    summary: |
      Print the latest changelog entry

      This task will invoke `knope`. It will parse the changelog and print the entry of the
      latest version to the console.
    deps: []
    cmds:
      - knope changelog-entry

  document-change:
    desc: Invokes `knope` to document a change
    summary: |
      Invokes `knope` to document a change.

      This task will invoke `knope`. It can be used to document a change with changesets instead of
      conventional commits.
    interactive: true
    deps: []
    cmds:
      - knope changelog-entry

  mega-linter:
    desc: Run mega linter
    summary: |
      Run mega linter.

      This task will use `npx` to run `mega-linter` locally.
    interactive: true
    deps: []
    cmds:
      - npx mega-linter-runner --flavor ci_light

  version:
    desc: Prints the project version
    summary: |
      Prints the project version.

      This task invokes `knope` to retrieve the current project version and prints it to the
      console.
    deps: []
    cmds:
      - echo "LatexWorks version v{{.VERSION}}"
